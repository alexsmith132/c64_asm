ca65 V2.11.0 - (C) Copyright 1998-2005 Ullrich von Bassewitz
Main file   : ascii.s
Current file: ascii.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.11.0
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.11.0"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
000000r 1               	.macpack	longbranch
000000r 1               	.import		_clrscr
000000r 1               	.import		_cputc
000000r 1               	.import		_cprintf
000000r 1               	.import		_cgetc
000000r 1               	.import		_cursor
000000r 1               	.import		_screensize
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               L0001:
000000r 1  D4 59 50 45  	.byte	$D4,$59,$50,$45,$20,$43,$48,$41,$52,$41,$43,$54,$45,$52,$53,$20
000004r 1  20 43 48 41  
000008r 1  52 41 43 54  
000010r 1  54 4F 20 53  	.byte	$54,$4F,$20,$53,$45,$45,$0A,$0D,$54,$48,$45,$49,$52,$20,$48,$45
000014r 1  45 45 0A 0D  
000018r 1  54 48 45 49  
000020r 1  58 41 44 45  	.byte	$58,$41,$44,$45,$43,$49,$4D,$41,$4C,$20,$43,$4F,$44,$45,$0A,$0D
000024r 1  43 49 4D 41  
000028r 1  4C 20 43 4F  
000030r 1  4E 55 4D 42  	.byte	$4E,$55,$4D,$42,$45,$52,$53,$3A,$0A,$0D,$0D,$00,$3D,$24,$25,$30
000034r 1  45 52 53 3A  
000038r 1  0A 0D 0D 00  
000040r 1  32 58 20 00  	.byte	$32,$58,$20,$00,$0A,$0D,$00,$0A,$0D,$00
000044r 1  0A 0D 00 0A  
000048r 1  0D 00        
00004Ar 1               
00004Ar 1               .segment	"BSS"
000000r 1               
000000r 1               _height:
000000r 1  00           	.res	1,$00
000001r 1               _width:
000001r 1  00           	.res	1,$00
000002r 1               _r:
000002r 1  00           	.res	1,$00
000003r 1               _t:
000003r 1  00           	.res	1,$00
000004r 1               _c:
000004r 1  00 00        	.res	2,$00
000006r 1               
000006r 1               ; ---------------------------------------------------------------
000006r 1               ; int __near__ GET (void)
000006r 1               ; ---------------------------------------------------------------
000006r 1               
000006r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_GET: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  20 rr rr     	jsr     _cgetc
000003r 1  8D rr rr     	sta     _c
000006r 1  8E rr rr     	stx     _c+1
000009r 1  20 rr rr     	jsr     _cputc
00000Cr 1  AD rr rr     	lda     _c
00000Fr 1  AE rr rr     	ldx     _c+1
000012r 1  4C rr rr     	jmp     L0003
000015r 1  60           L0003:	rts
000016r 1               
000016r 1               .endproc
000016r 1               
000016r 1               ; ---------------------------------------------------------------
000016r 1               ; int __near__ main (void)
000016r 1               ; ---------------------------------------------------------------
000016r 1               
000016r 1               .segment	"CODE"
000016r 1               
000016r 1               .proc	_main: near
000016r 1               
000016r 1               .segment	"CODE"
000016r 1               
000016r 1  20 rr rr     	jsr     _clrscr
000019r 1  A2 00        	ldx     #$00
00001Br 1  A9 07        	lda     #$07
00001Dr 1  8D rr rr     	sta     _r
000020r 1  A9 rr        	lda     #<(L0001)
000022r 1  A2 rr        	ldx     #>(L0001)
000024r 1  20 rr rr     	jsr     pushax
000027r 1  A0 02        	ldy     #$02
000029r 1  20 rr rr     	jsr     _cprintf
00002Cr 1  A9 rr        	lda     #<(_width)
00002Er 1  A2 rr        	ldx     #>(_width)
000030r 1  20 rr rr     	jsr     pushax
000033r 1  A9 rr        	lda     #<(_height)
000035r 1  A2 rr        	ldx     #>(_height)
000037r 1  20 rr rr     	jsr     _screensize
00003Ar 1  A2 00        	ldx     #$00
00003Cr 1  AD rr rr     	lda     _width
00003Fr 1  20 rr rr     	jsr     pushax
000042r 1  A9 06        	lda     #$06
000044r 1  20 rr rr     	jsr     tosudiva0
000047r 1  8D rr rr     	sta     _width
00004Ar 1  A9 01        	lda     #$01
00004Cr 1  20 rr rr     	jsr     _cursor
00004Fr 1  A2 00        	ldx     #$00
000051r 1  A9 00        	lda     #$00
000053r 1  8D rr rr     	sta     _t
000056r 1  20 rr rr     L0018:	jsr     _GET
000059r 1  8D rr rr     	sta     _c
00005Cr 1  8E rr rr     	stx     _c+1
00005Fr 1  E0 FF        	cpx     #$FF
000061r 1  D0 02        	bne     L001D
000063r 1  C9 FF        	cmp     #$FF
000065r 1  20 rr rr     L001D:	jsr     boolne
000068r 1  D0 03 4C rr  	jeq     L0019
00006Cr 1  rr           
00006Dr 1  A2 00        	ldx     #$00
00006Fr 1  AD rr rr     	lda     _r
000072r 1  20 rr rr     	jsr     pushax
000075r 1  A2 00        	ldx     #$00
000077r 1  AD rr rr     	lda     _height
00007Ar 1  20 rr rr     	jsr     toseqax
00007Dr 1  D0 03 4C rr  	jeq     L001E
000081r 1  rr           
000082r 1  20 rr rr     	jsr     _clrscr
000085r 1  A2 00        	ldx     #$00
000087r 1  A9 00        	lda     #$00
000089r 1  8D rr rr     	sta     _t
00008Cr 1  AD rr rr     	lda     _c
00008Fr 1  20 rr rr     	jsr     _cputc
000092r 1  A2 00        	ldx     #$00
000094r 1  A9 01        	lda     #$01
000096r 1  8D rr rr     	sta     _r
000099r 1  AD rr rr     L001E:	lda     _c
00009Cr 1  AE rr rr     	ldx     _c+1
00009Fr 1  E0 00        	cpx     #$00
0000A1r 1  D0 02        	bne     L002A
0000A3r 1  C9 0D        	cmp     #$0D
0000A5r 1  20 rr rr     L002A:	jsr     booleq
0000A8r 1  D0 03 4C rr  	jeq     L0028
0000ACr 1  rr           
0000ADr 1  A2 00        	ldx     #$00
0000AFr 1  EE rr rr     	inc     _r
0000B2r 1  AD rr rr     	lda     _r
0000B5r 1  A9 rr        L0028:	lda     #<(L0001+60)
0000B7r 1  A2 rr        	ldx     #>(L0001+60)
0000B9r 1  20 rr rr     	jsr     pushax
0000BCr 1  AD rr rr     	lda     _c
0000BFr 1  AE rr rr     	ldx     _c+1
0000C2r 1  20 rr rr     	jsr     pushax
0000C5r 1  A0 04        	ldy     #$04
0000C7r 1  20 rr rr     	jsr     _cprintf
0000CAr 1  AD rr rr     	lda     _c
0000CDr 1  AE rr rr     	ldx     _c+1
0000D0r 1  E0 00        	cpx     #$00
0000D2r 1  D0 02        	bne     L0031
0000D4r 1  C9 D1        	cmp     #$D1
0000D6r 1  20 rr rr     L0031:	jsr     booleq
0000D9r 1  D0 03 4C rr  	jeq     L002F
0000DDr 1  rr           
0000DEr 1  4C rr rr     	jmp     L0019
0000E1r 1  A2 00        L002F:	ldx     #$00
0000E3r 1  EE rr rr     	inc     _t
0000E6r 1  AD rr rr     	lda     _t
0000E9r 1  20 rr rr     	jsr     pushax
0000ECr 1  A2 00        	ldx     #$00
0000EEr 1  AD rr rr     	lda     _width
0000F1r 1  20 rr rr     	jsr     toseqax
0000F4r 1  D0 03 4C rr  	jeq     L0032
0000F8r 1  rr           
0000F9r 1  A9 rr        	lda     #<(L0001+68)
0000FBr 1  A2 rr        	ldx     #>(L0001+68)
0000FDr 1  20 rr rr     	jsr     pushax
000100r 1  A0 02        	ldy     #$02
000102r 1  20 rr rr     	jsr     _cprintf
000105r 1  A2 00        	ldx     #$00
000107r 1  EE rr rr     	inc     _r
00010Ar 1  AD rr rr     	lda     _r
00010Dr 1  A2 00        	ldx     #$00
00010Fr 1  A9 00        	lda     #$00
000111r 1  8D rr rr     	sta     _t
000114r 1  4C rr rr     L0032:	jmp     L0018
000117r 1  A9 rr        L0019:	lda     #<(L0001+71)
000119r 1  A2 rr        	ldx     #>(L0001+71)
00011Br 1  20 rr rr     	jsr     pushax
00011Er 1  A0 02        	ldy     #$02
000120r 1  20 rr rr     	jsr     _cprintf
000123r 1  A2 00        	ldx     #$00
000125r 1  A9 00        	lda     #$00
000127r 1  4C rr rr     	jmp     L0009
00012Ar 1  60           L0009:	rts
00012Br 1               
00012Br 1               .endproc
00012Br 1               
00012Br 1               
