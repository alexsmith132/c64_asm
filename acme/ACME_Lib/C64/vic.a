;ACME 0.07

!ifdef Lib_C64_vic_a !eof
Lib_C64_vic_a = 1

; color codes
vicclr_black	= $0
vicclr_white	= $1
vicclr_red	= $2
vicclr_cyan	= $3
vicclr_purple	= $4
vicclr_green	= $5
vicclr_blue	= $6
vicclr_yellow	= $7
vicclr_orange	= $8
vicclr_brown	= $9
vicclr_lred	= $a
vicclr_gray1	= $b
vicclr_gray2	= $c
vicclr_lgreen	= $d
vicclr_lblue	= $e
vicclr_gray3	= $f

; register addresses
vic_xs0		= $d000
vic_ys0		= $d001
vic_xs1		= $d002
vic_ys1		= $d003
vic_xs2		= $d004
vic_ys2		= $d005
vic_xs3		= $d006
vic_ys3		= $d007
vic_xs4		= $d008
vic_ys4		= $d009
vic_xs5		= $d00a
vic_ys5		= $d00b
vic_xs6		= $d00c
vic_ys6		= $d00d
vic_xs7		= $d00e
vic_ys7		= $d00f
vic_msb_xs	= $d010
vic_controlv	= $d011; vertical control (and much other stuff)
vic_line	= $d012; raster line
vic_xlp		= $d013; light pen coordinates
vic_ylp		= $d014
vic_sactive	= $d015; sprites: active
vic_controlh	= $d016;horizontal control (and much other stuff)
vic_sdy		= $d017; sprites: double height
vic_ram		= $d018; RAM pointer
vic_irq		= $d019
vic_irqmask	= $d01a
vic_sback	= $d01b; sprites: background mode
vic_smc		= $d01c; sprites: multi color mode
vic_sdx		= $d01d; sprites: double width
vic_ss_collided	= $d01e; sprite-sprite collision detect
vic_sd_collided	= $d01f; sprite-data collision detect

; color registers
vic_cborder	= $d020; border color
vic_cbg		= $d021; general background color
vic_cbg0	= $d021
vic_cbg1	= $d022; background color 1 (for EBC and MC text mode)
vic_cbg2	= $d023; background color 2 (for EBC and MC text mode)
vic_cbg3	= $d024; background color 3 (for EBC mode)
vic_sc01	= $d025; sprite color for MC-bitpattern %01
vic_sc11	= $d026; sprite color for MC-bitpattern %11
vic_cs0		= $d027; sprite colors
vic_cs1		= $d028
vic_cs2		= $d029
vic_cs3		= $d02a
vic_cs4		= $d02b
vic_cs5		= $d02c
vic_cs6		= $d02d
vic_cs7		= $d02e

; further registers, only present in the C128 variant of this chip
vic_keyboard	= $d02f
vic_clock	= $d030
